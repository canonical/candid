/* groovylint-disable NestedBlockDepth */
/* groovylint-disable-next-line CompileStatic, VariableTypeRequired, NoDef */
def oci

String pipelineLabel = 'docker'
/* String proxyUrl = 'http://squid.internal:3128' */
String proxyUrl = ''
String githubCredId = '054810bf-9336-43b2-b9ed-e45dec6c31d2'

String imageName = 'candid'

pipeline {
    agent {
        label "${pipelineLabel}"
    }

    options {
        disableConcurrentBuilds()
        buildDiscarder(logRotator(numToKeepStr: '10'))
        disableResume()
    }

    environment {
        DOCKER_BUILDKIT = 1
        GITHUB_PAT_AUTH = credentials("${githubCredId}")
        HTTP_PROXY = "${proxyUrl}"
        HTTPS_PROXY = "${proxyUrl}"
        HOME = "${env.WORKSPACE}"
    }

    stages {
        stage('Setup environment') {
            steps {
                checkout scm
                script {
                    oci = load("${env.WORKSPACE}/jenkins/jenkinsfiles/utils/oci.groovy")
                }
            }
        }

        stage('Build image') {
            steps {
                script {
                    oci.buildImage("${imageName}:latest")
                    sh 'env'
                }
                echo 'Image built.'
            }
        }

        stage('Scan image') {
            steps {
                script {
                    oci.scanImage("${imageName}:latest")
                }
            }
        }

        stage('Save image') {
            steps {
                script {
                    oci.saveImage("${imageName}:latest")
                }
                archiveArtifacts artifacts: '*.tar.gz', fingerprint: true, followSymlinks: false, onlyIfSuccessful: true
                echo 'Image saved.'
            }
        }

    }
    post {
        always {
            sh "echo 'Image built'"
        }
    }
}
